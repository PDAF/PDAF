This directory is part of PDAF - the Parallel Data Assimilation Framework.
It contains an implementations of the offline and online modes of PDAF
with a simple 2-dimensional model setup.

This is a tutorial version prepared for the Short Course
"Practical Ensemble Data Assimilation with the Parallel Data Assimilation Framework"
at the EGU General Assembly 2021. It includes less examples than the full
tutorial.

For real use of PDAF, we recommend to download the full release version of
PDAF from http://pdaf.awi.de

The implementation is described in detail in the tutorials that are available
on the web site of PDAF (http://pdaf.awi.de).

The directories are as follows:

---- Input files ----

inputs_online/
This directory contains input files to execute the example programs for the
online mode of PDAF.

---- ONLINE mode ----

online_2d_serialmodel/
contains an implementation of the online mode of PDAF with a serial 
model (i.e. non-parallelized). Only the ensemble integration is performed
in parallel, while each model and the filter are each executed using
a single process. This is the fully-parallel setup. Thus, one needs to
run the program using MPI specifying the same number of processes as
the ensemble size. For example:
    mpirun -np 6 ./model_pdaf -dim_ens 6


online_2d_serialmodel.noMPI/
contains an implementation of the online mode of PDAF with a serial 
model (i.e. non-parallelized). This implementation is without
parallelization. Thus one can compile the program without an MPI
library and run it directly e.g. using
    ./model_pdaf -dim_ens 6


---- Testing and verification ----

verification/
This directory contains outputs files from a test run using the script 'runtests.sh'.

The script
   runtests.sh
allows one to compile and the tutorial cases. The outputs in verification/ can then
be used for comparison. To run the script one has to set the correct make.arch 
files for 
  ARCH - test cases without MPI parallelization
  ARCH_MPI - test cases with MPI parallelization
To test the cases with OpenMP parallelization the make.arch files need to activate
OpenMP for the compilation. runtests.sh does set the number of OpenMP threads by
itself.


---- Plotting ----

the directory
   plotting/
contains plot scripts for Python:

plot_file.py
   Plot a field from a specified file
   Usage: ./plot_field.py <filename>

plot_diff.py
   Plot the difference of two fields (e.g. truth and analysis)
   Usage: ./plot_field.py <filename1> <filename2>

plot_ens.py
   Plot the time series of ensemble mean and spread for the grid point (i,j)
   Usage: ./plot_ens.py <i> <j>
